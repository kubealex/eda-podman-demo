version: "3.8"
services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:latest
    hostname: zookeeper
    networks:
      - eda-ansible
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:latest
    hostname: kafka
    ports:
      - "9092:9092"
    networks:
      - eda-ansible
    volumes:
      - "kafka_data:/bitnami"
    environment:
      KAFKA_CFG_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      ALLOW_PLAINTEXT_LISTENER: true
      KAFKA_ENABLE_KRAFT: false
    depends_on:
      - zookeeper

  alertmanager:
    image: quay.io/kubealex/eda-alertmanager
    ports: "9093:9093"
    hostname: alertmanager
    networks:
      - eda-ansible

  quarkus-client:
    image: quay.io/kubealex/eda-quarkus
    hostname: eda-quarkus
    restart: on-failure
    ports: 8080:8080
    networks:
      - eda-ansible
    depends_on:
      - kafka
      - zookeeper
      - alertmanager

  ansible:
    image: quay.io/kubealex/eda-ansible
    hostname: ansible
    restart: on-failure
    ports:
      - 5000:5000
      - 5001:5001
    volumes:
      - ./eda-ansible:/eda-ansible:Z
    networks:
      - eda-ansible
    entrypoint: ansible-rulebook -i inventory.yml --rulebook eda-rulebook-multiple-sources.yml --verbose
    depends_on:
      - quarkus-client
      - alertmanager
      - kafka
      - zookeeper

networks:
  eda-ansible:
    name: eda-ansible

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
